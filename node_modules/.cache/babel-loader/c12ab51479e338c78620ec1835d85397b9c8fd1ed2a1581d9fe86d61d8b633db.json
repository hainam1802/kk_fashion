{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport authReducer from \"../auth\";\nimport storage from \"redux-persist/lib/storage\";\nimport { combineReducers } from \"redux\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport { loadingBarReducer } from \"react-redux-loading-bar\";\nimport thunk from \"redux-thunk\";\nimport { createStateSyncMiddleware, initMessageListener } from \"redux-state-sync/dist/syncState\";\n\n// const store = configureStore({\n//     reducer: {\n//         auth: authReducer,\n//     }\n// })\n// export default store;\nconst syncConfig = {\n  blacklist: [\"persist/PERSIST\"]\n};\nconst authPersistConfig = {\n  key: \"auth\",\n  storage\n};\nconst rootReducer = combineReducers({\n  auth2: persistReducer(authPersistConfig, authReducer),\n  loadingBar: loadingBarReducer\n});\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [thunk, createStateSyncMiddleware(syncConfig)]\n});\ninitMessageListener(store);\nexport default store;\nexport const persistStore1 = persistStore(store);","map":{"version":3,"names":["configureStore","authReducer","storage","combineReducers","persistReducer","persistStore","loadingBarReducer","thunk","createStateSyncMiddleware","initMessageListener","syncConfig","blacklist","authPersistConfig","key","rootReducer","auth2","loadingBar","store","reducer","middleware","persistStore1"],"sources":["C:/xampp/htdocs/kk_fashion/src/store/reducers/index.js"],"sourcesContent":["import {configureStore} from \"@reduxjs/toolkit\";\r\nimport authReducer from \"../auth\";\r\nimport storage from \"redux-persist/lib/storage\"\r\nimport {combineReducers} from \"redux\";\r\nimport {persistReducer,persistStore} from \"redux-persist\";\r\nimport {loadingBarReducer} from \"react-redux-loading-bar\";\r\n\r\nimport thunk from \"redux-thunk\";\r\nimport {createStateSyncMiddleware, initMessageListener} from \"redux-state-sync/dist/syncState\";\r\n\r\n// const store = configureStore({\r\n//     reducer: {\r\n//         auth: authReducer,\r\n//     }\r\n// })\r\n// export default store;\r\nconst syncConfig = {\r\n    blacklist: [\"persist/PERSIST\"]\r\n}\r\nconst authPersistConfig = {key: \"auth\", storage};\r\nconst rootReducer = combineReducers({\r\n    auth2: persistReducer(authPersistConfig, authReducer),\r\n    loadingBar: loadingBarReducer\r\n});\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: [thunk,createStateSyncMiddleware(syncConfig)]\r\n});\r\ninitMessageListener(store)\r\nexport default store;\r\nexport const persistStore1 = persistStore(store)"],"mappings":"AAAA,SAAQA,cAAc,QAAO,kBAAkB;AAC/C,OAAOC,WAAW,MAAM,SAAS;AACjC,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAAQC,eAAe,QAAO,OAAO;AACrC,SAAQC,cAAc,EAACC,YAAY,QAAO,eAAe;AACzD,SAAQC,iBAAiB,QAAO,yBAAyB;AAEzD,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAAQC,yBAAyB,EAAEC,mBAAmB,QAAO,iCAAiC;;AAE9F;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAG;EACfC,SAAS,EAAE,CAAC,iBAAiB;AACjC,CAAC;AACD,MAAMC,iBAAiB,GAAG;EAACC,GAAG,EAAE,MAAM;EAAEX;AAAO,CAAC;AAChD,MAAMY,WAAW,GAAGX,eAAe,CAAC;EAChCY,KAAK,EAAEX,cAAc,CAACQ,iBAAiB,EAAEX,WAAW,CAAC;EACrDe,UAAU,EAAEV;AAChB,CAAC,CAAC;AACF,MAAMW,KAAK,GAAGjB,cAAc,CAAC;EACzBkB,OAAO,EAAEJ,WAAW;EACpBK,UAAU,EAAE,CAACZ,KAAK,EAACC,yBAAyB,CAACE,UAAU,CAAC;AAC5D,CAAC,CAAC;AACFD,mBAAmB,CAACQ,KAAK,CAAC;AAC1B,eAAeA,KAAK;AACpB,OAAO,MAAMG,aAAa,GAAGf,YAAY,CAACY,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}